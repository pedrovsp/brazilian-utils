import { format, LENGTH } from '.';
// 83640000001-1 33120138000-2 81288462711-6 08013618155-1
describe('format', () => {
  test('should format convenio with mask', () => {
    expect(format('')).toBe('');
    expect(format('8')).toBe('8');
    expect(format('83')).toBe('83');
    expect(format('836')).toBe('836');
    expect(format('8364')).toBe('8364');
    expect(format('83640')).toBe('83640');
    expect(format('836400')).toBe('836400');
    expect(format('8364000')).toBe('8364000');
    expect(format('83640000')).toBe('83640000');
    expect(format('836400000')).toBe('836400000');
    expect(format('8364000000')).toBe('8364000000');
    expect(format('83640000001')).toBe('83640000001');
    expect(format('836400000011')).toBe('83640000001-1');
    expect(format('8364000000113')).toBe('83640000001-1 3');
    expect(format('83640000001133')).toBe('83640000001-1 33');
    expect(format('836400000011331')).toBe('83640000001-1 331');
    expect(format('8364000000113312')).toBe('83640000001-1 3312');
    expect(format('83640000001133120')).toBe('83640000001-1 33120');
    expect(format('836400000011331201')).toBe('83640000001-1 331201');
    expect(format('8364000000113312013')).toBe('83640000001-1 3312013');
    expect(format('83640000001133120138')).toBe('83640000001-1 33120138');
    expect(format('836400000011331201380')).toBe('83640000001-1 331201380');
    expect(format('8364000000113312013800')).toBe('83640000001-1 3312013800');
    expect(format('83640000001133120138000')).toBe('83640000001-1 33120138000');
    expect(format('836400000011331201380002')).toBe('83640000001-1 33120138000-2');
    expect(format('8364000000113312013800028')).toBe('83640000001-1 33120138000-2 8');
    expect(format('83640000001133120138000281')).toBe('83640000001-1 33120138000-2 81');
    expect(format('836400000011331201380002812')).toBe('83640000001-1 33120138000-2 812');
    expect(format('8364000000113312013800028128')).toBe('83640000001-1 33120138000-2 8128');
    expect(format('83640000001133120138000281288')).toBe('83640000001-1 33120138000-2 81288');
    expect(format('836400000011331201380002812884')).toBe('83640000001-1 33120138000-2 812884');
    expect(format('8364000000113312013800028128846')).toBe('83640000001-1 33120138000-2 8128846');
    expect(format('83640000001133120138000281288462')).toBe('83640000001-1 33120138000-2 81288462');
    expect(format('836400000011331201380002812884627')).toBe('83640000001-1 33120138000-2 812884627');
    expect(format('8364000000113312013800028128846271')).toBe('83640000001-1 33120138000-2 8128846271');
    expect(format('83640000001133120138000281288462711')).toBe('83640000001-1 33120138000-2 81288462711');
    expect(format('836400000011331201380002812884627116')).toBe('83640000001-1 33120138000-2 81288462711-6');
    expect(format('8364000000113312013800028128846271160')).toBe('83640000001-1 33120138000-2 81288462711-6 0');
    expect(format('83640000001133120138000281288462711608')).toBe('83640000001-1 33120138000-2 81288462711-6 08');
    expect(format('836400000011331201380002812884627116080')).toBe('83640000001-1 33120138000-2 81288462711-6 080');
    expect(format('8364000000113312013800028128846271160801')).toBe('83640000001-1 33120138000-2 81288462711-6 0801');
    expect(format('83640000001133120138000281288462711608013')).toBe('83640000001-1 33120138000-2 81288462711-6 08013');
    expect(format('836400000011331201380002812884627116080136')).toBe(
      '83640000001-1 33120138000-2 81288462711-6 080136'
    );
    expect(format('8364000000113312013800028128846271160801361')).toBe(
      '83640000001-1 33120138000-2 81288462711-6 0801361'
    );
    expect(format('83640000001133120138000281288462711608013618')).toBe(
      '83640000001-1 33120138000-2 81288462711-6 08013618'
    );
    expect(format('836400000011331201380002812884627116080136181')).toBe(
      '83640000001-1 33120138000-2 81288462711-6 080136181'
    );
    expect(format('8364000000113312013800028128846271160801361815')).toBe(
      '83640000001-1 33120138000-2 81288462711-6 0801361815'
    );
    expect(format('83640000001133120138000281288462711608013618155')).toBe(
      '83640000001-1 33120138000-2 81288462711-6 08013618155'
    );
    expect(format('836400000011331201380002812884627116080136181551')).toBe(
      '83640000001-1 33120138000-2 81288462711-6 08013618155-1'
    );
  });

  test(`shouldn't add digits after the conveio length (${LENGTH})`, () => {
    expect(format('83640000001133120138000281288462711608013618155123123123')).toBe(
      '83640000001-1 33120138000-2 81288462711-6 08013618155-1'
    );

    expect(format('83640000001133120138000281288462711608013618155124124124124')).toBe(
      '83640000001-1 33120138000-2 81288462711-6 08013618155-1'
    );
  });

  test('should remove all non numeric characters convenio', () => {
    expect(format('8364000000@1-1 33120138000-2:: 81288462711-6# 080%13618155-1')).toBe(
      '83640000001-1 33120138000-2 81288462711-6 08013618155-1'
    );

    expect(format('8364000$$0001-1 331201DS38000-2 81288S#462711-6 AA08013618155-1')).toBe(
      '83640000001-1 33120138000-2 81288462711-6 08013618155-1'
    );
  });

  test('should return an empty string when receive an empty string', () => {
    expect(format('')).toBe('');
    expect(format('')).toBe('');
  });
});
